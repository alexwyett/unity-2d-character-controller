name: Build & Deploy Unity WebGL
on:
  push:
    branches:
      - main
      - untiy-license
env:
  BUCKET: unitykwhitejrcom-origin
  UNITY_DIR: EventDrivenCharacterController
jobs:
  # build:
  #   name: Build For WebGL Platform
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: EventDrivenCharacterController
  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Checkout

  #     - uses: actions/cache@v2
  #       name: Cache
  #       with:
  #         path: Library
  #         key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
  #         restore-keys: |
  #           Library-

  #     # - uses: game-ci/unity-test-runner@v2
  #     #   name: Test
  #     #   env:
  #     #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #     #   with:
  #     #     githubToken: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: game-ci/unity-builder@v2
  #       name: Build
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         targetPlatform: WebGL
  #         projectPath: EventDrivenCharacterController
  #         # unityVersion: ${{ matrix.unityVersion }}

  #     - uses: actions/upload-artifact@v2
  #       name: Upload
  #       with:
  #         name: Build
  #         path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: terraform
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/download-artifact@v3
        name: Download artifacts
        with:
          path: public2

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: public2

      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS credentials from Test account
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Deploy static site from public dir to S3 bucket
        run: aws s3 sync ./public2 s3://$BUCKET --delete
